[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://bj5fa41bwd7x2"]

[ext_resource type="Texture2D" uid="uid://btp87xo4xpjrh" path="res://assets/palettes/green.png" id="1_70l84"]

[sub_resource type="Shader" id="Shader_851mu"]
code = "shader_type canvas_item;

uniform sampler2D palette : filter_nearest, repeat_disable;
uniform bool skip_first_row = false;
uniform bool use_palette_alpha = false;
uniform float fps = 6;

void fragment() {
	vec4 original_color = texture(TEXTURE, UV);
	ivec3 colori = ivec3(round(original_color.rgb * 255.0));
	
	ivec2 color_count = textureSize(palette, 0);
	
	float idx = -1.0;
	for (int i = 0; i < color_count.x; i++) {
		vec3 color2 = texture(palette, vec2(float(i) / float(color_count.x - 1), 0)).rgb;
		ivec3 colori2 = ivec3(round(color2 * 255.0));
		
		if (colori == colori2) {
			idx = float(i);
			break;
		}
	}
	
	if (idx >= 0.0) {
		vec2 uv;
		uv.x = idx / float(color_count.x - 1);
		uv.y = (mod(TIME * fps, max(float(color_count.y - 1 - int(skip_first_row)), 1.0)) + float(skip_first_row))  / float(color_count.y - 1);
		
		vec4 palette_color = texture(palette, uv);
		COLOR = vec4(palette_color.rgb, mix(original_color.a, palette_color.a, float(use_palette_alpha)));
	} else {
		COLOR = original_color;
	}
}
"

[resource]
shader = SubResource("Shader_851mu")
shader_parameter/skip_first_row = true
shader_parameter/use_palette_alpha = false
shader_parameter/fps = 6.0
shader_parameter/palette = ExtResource("1_70l84")
